services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-net
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_PROCESS_ROLES=broker
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_BROKER_ID=1
      - KAFKA_ENABLE_KRAFT=no   # ðŸš¨ This disables KRaft mode
    depends_on:
      - zookeeper
    networks:
      - kafka-net


networks:
  kafka-net:
    driver: bridge


# docker run -d --name zookeeper \
#   --network kafka-net \
#   -e ALLOW_ANONYMOUS_LOGIN=yes \
#   bitnami/zookeeper:latest


# docker run -d --name kafka \
#   -p 9092:9092 \
#   -e KAFKA_NODE_ID=1 \
#   -e KAFKA_PROCESS_ROLES=broker,controller \
#   -e KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9093 \
#   -e KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT \
#   -e KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 \
#   -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 \
#   -e KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER \
#   -e KAFKA_LOG_DIRS=/tmp/kraft-combined-logs \
#   apache/kafka:latest



# N 2
# docker run -d --name zookeeper \
#   --network kafka-net \
#   -p 2181:2181 \
#   -e ALLOW_ANONYMOUS_LOGIN=yes \
#   bitnami/zookeeper:latest

# Create network
# docker network create kafka-net

# # Start Kafka in KRaft mode
# docker run -d --name kafka \
#   --network kafka-net \
#   -p 9092:9092 \
#   -e KAFKA_NODE_ID=1 \
#   -e KAFKA_PROCESS_ROLES=broker,controller \
#   -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093 \
#   -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 \
#   -e KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9093 \
#   -e KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER \
#   -e KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT \
#   -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
#   -e KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 \
#   -e KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1 \
#   -e KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0 \
#   -e KAFKA_AUTO_CREATE_TOPICS_ENABLE=true \
#   apache/kafka:latest

# # Wait a few seconds for Kafka to start, then test
# sleep 10

# # List topics using the correct path
# docker exec kafka /opt/kafka/bin/kafka-topics.sh --list \
#   --bootstrap-server localhost:9092

# Enter the container
# docker exec -it kafka bash

# create topic
# docker exec kafka /opt/kafka/bin/kafka-topics.sh --create \
#   --topic test-topic2 \
#   --bootstrap-server localhost:9092 \
#   --partitions 3 \
#   --replication-factor 1

# Describe topic
# docker exec kafka /opt/kafka/bin/kafka-topics.sh --describe \
#   --topic test-topic \
#   --bootstrap-server localhost:9092

# Delete topic
# docker exec kafka /opt/kafka/bin/kafka-topics.sh --delete \
#   --topic test-topic \
#   --bootstrap-server localhost:9092

